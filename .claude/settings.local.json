{
  "permissions": {
    "allow": [
      "Bash(git submodule:*)",
      "Bash(grep:*)",
      "Bash(git remote remove:*)",
      "Bash(gh repo create:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(tree:*)",
      "Bash(wget:*)",
      "Bash(tmux new-session:*)",
      "Bash(tmux ls:*)",
      "Bash(echo \"Download running in tmux session ''siena_download''\n\nTo monitor progress:\n  tmux attach -t siena_download\n\nTo check download status without attaching:\n  tmux capture-pane -t siena_download -p | tail -20\n\nTo detach from tmux: Ctrl+B then D\")",
      "Bash(tmux capture-pane:*)",
      "Bash(find:*)",
      "Bash(gh repo view:*)",
      "Bash(gh repo list:*)",
      "Bash(gh repo fork:*)",
      "Bash(gh api:*)",
      "Read(//tmp/**)",
      "Bash(git fetch:*)",
      "Bash(gh repo delete:*)",
      "Bash(gh auth:*)",
      "Bash(gh issue create:*)",
      "Bash(pip3:*)",
      "Bash(uv venv:*)",
      "Bash(source:*)",
      "Bash(uv pip install:*)",
      "Bash(python test:*)",
      "Bash(python:*)",
      "Bash(git rm:*)",
      "Bash(uv pip compile:*)",
      "WebSearch",
      "Bash(uv sync:*)",
      "Bash(make test-inference:*)",
      "Bash(. .venv/bin/activate)",
      "Bash(tar:*)",
      "Bash(cat:*)",
      "Bash(pip install:*)",
      "Bash(tmux kill-session:*)",
      "Bash(tmux list-sessions:*)",
      "Bash(tmux attach:*)",
      "Bash(tee:*)",
      "Bash(ruff check:*)",
      "Bash(mypy:*)",
      "Bash(git reset:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(sed:*)",
      "Bash(nvidia-smi:*)",
      "Bash(export:*)",
      "Bash(mv:*)",
      "Bash(sudo ln:*)",
      "Bash(PYTHONPATH=/mnt/c/Users/JJ/Desktop/Clarity-Digital-Twin/SeizureTransformer/evaluation/nedc_eeg_eval/v6.0.0/lib:$PYTHONPATH python3 evaluation/nedc_eeg_eval/v6.0.0/bin/nedc_eeg_eval evaluation/nedc_scoring/output/lists/ref.list evaluation/nedc_scoring/output/lists/hyp.list -o evaluation/nedc_scoring/output/results)",
      "Bash(sudo apt:*)",
      "Bash(sudo apt install:*)",
      "Bash(timeout 2 git status --short)",
      "Bash(git remote:*)",
      "Bash(uv:*)",
      "Bash(pytest:*)",
      "Bash(make:*)",
      "Bash(git check-ignore:*)",
      "Bash(git checkout:*)",
      "Bash(tmux send-keys:*)",
      "Bash(./scripts/monitor_evaluation.sh:*)",
      "Bash(evaluation/utils/monitor_evaluation.sh:*)",
      "Bash(git stash:*)",
      "Bash(./evaluation/utils/monitor_evaluation.sh:*)",
      "Bash(bash:*)",
      "Bash(ruff format:*)",
      "Bash(echo \"Parameter sweep running in tmux session ''sweep_dev''\n\nTo monitor progress:\n  tmux attach -t sweep_dev\n\nTo check status without attaching:\n  tmux capture-pane -t sweep_dev -p | tail -20\n\nTo detach from tmux: Ctrl+B then D\")",
      "Bash(xargs:*)",
      "Bash(for:*)",
      "Bash(do basename \"$file\")",
      "Bash(done)",
      "Bash(while read f)",
      "Bash(do basename \"$f\" .py)",
      "Bash(do if [ -f \"$dir\" ])",
      "Bash(awk:*)",
      "Read(//mnt/c/Users/JJ/Desktop/**)",
      "Read(//usr/bin/**)",
      "Bash(do [ -f \"$dir/results/metrics.json\" ])",
      "Bash(ln:*)",
      "Bash(jq:*)",
      "Bash(do echo \"=== $dir ===\")",
      "Bash([ -f \"$dir/results/metrics.json\" ])",
      "Bash(if [ -f \"$dir/results/metrics.json\" ])",
      "Bash(then jq '.taes' \"$dir/results/metrics.json\")",
      "Bash(fi)",
      "Bash(echo:*)",
      "Bash(do)",
      "Bash(then)",
      "Bash(sort:*)",
      "Bash(do if [ -f \"$dir/results/metrics.json\" ])"
    ],
    "deny": [],
    "ask": []
  }
}